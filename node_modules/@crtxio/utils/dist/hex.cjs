'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function isValid(str) {
  return typeof str === "string" && /^(0x)?[a-f0-9]*$/i.test(str);
}
function isAddr(str) {
  return isValid(str) && str.length == 42;
}
function toBytes(hex2) {
  if (hex2 instanceof Uint8Array) {
    return hex2;
  }
  if (!isValid(hex2))
    throw Error("invalid bytes");
  hex2 = hex2.replace(/^0x/i, "");
  hex2 = hex2.length % 2 ? "0" + hex2 : hex2;
  const bytes = hex2.match(/([a-f0-9]{2})/gi) || [];
  return new Uint8Array(bytes.map((byte) => parseInt(byte, 16)));
}
function fromBytes(bytes, prefix = true) {
  const hex2 = bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, "0"), "");
  return prefix ? "0x" + hex2 : hex2;
}
const hex = { isValid, isAddr, toBytes, fromBytes };

exports.fromBytes = fromBytes;
exports.hex = hex;
exports.isAddr = isAddr;
exports.isValid = isValid;
exports.toBytes = toBytes;
